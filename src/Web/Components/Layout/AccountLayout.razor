@inherits LayoutComponentBase
@layout MainLayout

@inject SignInManager<User> SignInManager
@inject IdentityUserAccessor UserAccessor

@if (user is not null)
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="d-flex align-center">
        <div class="d-flex flex-column mud-width-full">

            <MudText Typo="Typo.h1" GutterBottom="true">Account Settings</MudText>

            <MudGrid>
                <MudItem xs="12" sm="12" md="5" lg="4" xl="3">
                    <MudCard>
                        <MudCardHeader>
                            <CardHeaderContent>

                                @* TODO: This should all be moved into a separate component *@
                                @if (string.IsNullOrEmpty(user.AvatarUrl) is false)
                                {
                                    <MudAvatar Size="Size.Large" Style="height:250px; width:250px; font-size: 2rem;">
                                        <MudImage Src="@user.AvatarUrl" Style="height:100%; width:100%;"></MudImage>
                                    </MudAvatar>
                                }
                                else
                                {
                                    if (string.IsNullOrEmpty(user.FirstName) is false && string.IsNullOrEmpty(user.LastName) is false) 
                                    {
                                        <MudAvatar Variant="Variant.Outlined">
                                            @user.FirstName?.First() @user.LastName?.First()
                                        </MudAvatar>
                                    }
                                    else
                                    {
                                        <MudAvatar Variant="Variant.Outlined">
                                            @user.Name.First()
                                        </MudAvatar>
                                    }
                                }

                                <MudText Align="Align.Center">@user.FirstName @user.LastName</MudText>

                                @* TODO: Change to role when available *@
                                <MudText Align="Align.Center">@user.UserName</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudDivider DividerType="DividerType.Middle" />

                            <MudNavMenu Rounded="true" Margin="Margin.Normal" Color="Color.Tertiary" Class="pa-2">

                                <MudNavLink Match="NavLinkMatch.All" Href="/account/profile" Icon="@Icons.Material.Outlined.Person">
                                    Profile
                                </MudNavLink>

                                <MudNavLink Match="NavLinkMatch.All" Href="/account/email" Icon="@Icons.Material.Outlined.Email">
                                    Emails
                                </MudNavLink>

                                <MudNavLink Match="NavLinkMatch.All" Href="/account/change-password" Icon="@Icons.Material.Outlined.Password">
                                    Password
                                </MudNavLink>

                                <MudNavLink Match="NavLinkMatch.All" Href="/account/logins" Icon="@Icons.Material.Outlined.Login">
                                    Logins
                                </MudNavLink>

                                <MudNavLink Match="NavLinkMatch.All" Href="/account/mfa" Icon="@Icons.Material.Outlined.LockReset">
                                    Authenticator
                                </MudNavLink>

                                <MudNavLink Match="NavLinkMatch.All" Href="/account/personal-data" Icon="@Icons.Material.Outlined.LockPerson">
                                    Personal Data
                                </MudNavLink>
                            </MudNavMenu>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" sm="12" md="7" lg="8" xl="9">

                    @Body

                </MudItem>
            </MudGrid>
        </div>
    </MudContainer>
}

@code {

    private User? user;
    private bool hasExternalLogins;

    [CascadingParameter]
    public required HttpContext HttpContext { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();

        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
    }
}