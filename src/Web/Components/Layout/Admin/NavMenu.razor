@rendermode RenderMode.InteractiveServer

<MudNavMenu>
    @* <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink> *@
    <MudNavLink Href="/admin/counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.Add">Counter</MudNavLink>
    <MudNavLink Href="/admin/weather" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.Cloud">Weather</MudNavLink>
    <MudNavLink Href="/admin/auth" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.Lock">Restricted</MudNavLink>

    @* TODO: De-deplicate the below as we don't need both these Authorized Views... *@
    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="/account/manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.Person">@context.User.Identity?.Name</MudNavLink>
        </Authorized>
        <NotAuthorized>
                <MudNavLink Href="/register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.AppRegistration">Register</MudNavLink>
                <MudNavLink Href="/login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.Login">Login</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>

    <AuthorizeView>
        <MudNavGroup Title="Account" Expanded="false" Icon="@Icons.Material.Filled.Dashboard">

            <MudNavLink Href="/account/profile">Profile</MudNavLink>
            <MudNavLink Href="/account/logins">Logins</MudNavLink>
            <MudNavLink Href="/account/authenticator/manage">Authenticator</MudNavLink>
        </MudNavGroup>
    </AuthorizeView>

    @* TODO: Fix up the Authorization Policies... *@

    <AuthorizeView>
        @* <AuthorizeView Policy="@Policies.CanManageUsers"> *@

        <MudNavLink Href="/admin/users" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Users</MudNavLink>
    </AuthorizeView>

    <AuthorizeView>
        @* <AuthorizeView Policy="@Policies.CanManageRoles"> *@

        <MudNavLink Href="/admin/roles" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Roles</MudNavLink>
    </AuthorizeView>

    <AuthorizeView>
        @* <AuthorizeView Policy="@Policies.CanManageApplications"> *@

        <MudNavLink Href="/admin/applications" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Applications</MudNavLink>
    </AuthorizeView>

    <AuthorizeView>
        @* <AuthorizeView Policy="@Policies.CanManageScopes"> *@

        <MudNavLink Href="/admin/scopes" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Scopes</MudNavLink>
    </AuthorizeView>
</MudNavMenu>

@code {

    [CascadingParameter]
    public Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthState is not null)
        {
            var result = await AuthState;
        }

        await  base.OnInitializedAsync();
    }
}
