@page "/logout"

<PageTitle>Logout</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center">

    <div class="d-flex flex-column mud-width-full">

        <MudStack Spacing="4" AlignItems="AlignItems.Center" Class="mt-12">

            <MudPaper Elevation="4" Class="pa-4" Width="100%">

                <MudText Typo="Typo.h1" GutterBottom="true">Logout</MudText>
                <MudText Typo="Typo.subtitle1">Are you sure you want to logout?</MudText>

                <MudDivider DividerType="DividerType.Middle" Class="my-6" />

                <form action="/logout" method="post">

                    <AntiforgeryToken />

                    <input type="hidden" name="returnUrl" value="@ReturnUrl" />

                    @foreach (KeyValuePair<string, StringValues> parameter in HttpContext.Request.HasFormContentType
                        ? (IEnumerable<KeyValuePair<string, StringValues>>)HttpContext.Request.Form
                        : HttpContext.Request.Query)
                    {
                        // We want to include any other form or QS parameters that are 
                        // included here back to the POST /login endpoint, however need 
                        // to skip over the Return Url to avoid duplicating it.
                        if (parameter.Key.Equals("ReturnUrl", StringComparison.OrdinalIgnoreCase) ||
                            parameter.Key.Equals("return_url", StringComparison.OrdinalIgnoreCase)) continue;

                        <input type="hidden" name="@parameter.Key" value="@parameter.Value" />
                    }

                    <MudButton ButtonType="ButtonType.Submit"
                        StartIcon="@Icons.Material.Outlined.Logout"
                        Variant="Variant.Filled" 
                        Color="Color.Primary" 
                        Size="Size.Large" 
                        FullWidth="true">
                        Confirm
                    </MudButton>
                </form>

            </MudPaper>
        </MudStack>
    </div>

</MudContainer>

@code {

    [CascadingParameter]
    public required HttpContext HttpContext { get; set; }

    [SupplyParameterFromQuery(Name = "return_url")]
    private string? ReturnUrl { get; set; }

    // TODO: Still lots to do to fully configure this as a "Single-logout" (SLO) page, e.g.
    // render the Front-channel logout iframes of all client applications logged into during this session.
}
